<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAADEJJREFUaEPNWQl0
        VNUZllUFgYQly+wzmSXJTPYEEsiGUlsCdQW1UhWR5RwXKGKrWAu1VK0iWi0IIigQVgGDIRBC2BIkWFkE
        SVj0VEEIKEuQLQ0kmdvve7w3Z/YQGE995/xn3rzt/sv3r/emm0J4/D08vE2wz1WqVB73K6Kjw3CtbQhZ
        CO2n8vPz2y42mbrit71MLmbBOK+3AbUL7aoh+BoZmx8TE1amVo/folb/Z4HJNOQVuz3hoaysMNy72U2g
        jjjvIJOPkCFgpfWfIPPFer2xXKOZtFGt3rFBozlcGBOz4lO9fvVarbYE996ebrP1n2mzZU1xOGJwfzWE
        /BaWGoF3e4Fu/b9apUiv14Cpt4p0uimLTKZ5m9Xq+o0qVf2W6GgnYONcC4Fw3lShUjVuUqlO4ZqALzjL
        NJra2/PyssB85Gt2e88yrfaBuWazQRaI1gnqX61XtZ83psXFdVin0dwPbU9aqdevAuMXyCAYlojnG9Tq
        BuXc/bdEpzsJJkcPzslJwHtf8NlP9Pq5uEYhbvvZBVhhMHRco9PFFhkMv1tpMMyitsnEtVKFWi2WpqXt
        LjEYvoB1rvD9PyUn/wOM8whnQAiJlgN9ZKnJ1Gm9Wv3ipzrdW2DASVi4a1g5/yw2VuwZMkTsHTpU7Coo
        EHvuuUfsHjRIfDd1qtg3bJgEJ+ldlappTEbGDDD+K5AKdIvs/O1+FmH48Y8Nht9uUKlq4bxn3WHjOtdq
        Re2CBaKxvl44m5tFM4gHfyVqbBTHlywRuwYOFFtNJgFLHnkhOfnZdVrtJsBq3wyrtT/W6S5HstD6BD7a
        EYxvp+k3Aefe0NkK5k8sWiQxHOxovnJFHJ42TewaMEBU6nQC1mxSvjXXYlmIdewgKYeEFFIIgxZo+jwi
        yyVvx63U68W+Rx8VTqfTpW1F8+4WUM4vHDwoDjz1lPg8Pd3l/IxiY1NTCak7QT1CCiNqAw78BBa5Qvx6
        C1CVnCzqjxzxgEswAS59+604uXq1+Orhh90FEG/Ex5djrYGyT3QImQXwwXYInc/4izifAcvndu5sCTke
        90/AD47DV7ZZrR5RDDmlET4xGetZQJ1DZgXiH7jf4y/yfD99ug9s3J3XH4R4/9js2R75QwkEcOxvsF4e
        iFm7/Q1bgVpYajQmwtkuewtQlZQkmi5darUAdRUVYiv8xj2SVaii4dDRAhHpHNZk2WFkNAqFAO1h2ip/
        8Dn2/vutgo7ycM3jj7ugA6UwN0i0OYpCqMTYtLR/gflk0G03JAC1/3JCQndGH2/H3XnHHaLxwgW/jtsS
        hA6MHSsJoFiAzLtbAxHvENZmgou8bgEYeT4xmWzAfqV32VDlcIiLhw751f6VM2cEKdhRM3Jk0BJkM3LD
        qMzMF8FDbEABvho+ImiiYOSpsNmKybx36Dz85pt+cd8Ei+wePFhUJSSIhuPHfTKx4tAHx48XlUh8Ptlc
        rq14/S+9exfSmV0CEA5LrFZNqd1esCA93VGQm9uFTkJG/UnJCADt7/Z23B35+aLp4kVfAVAm1DzxhIup
        U6WlAQWoli3gLQALvkoZTn/OzPwYPNwl8UbmUQYPh4NcrFSrnXiwcZXJtGhwbi49XWoJvYWgcCiN97g7
        7zaLRVzcv98vOk4sXOgBi/2jRkmZ2d9BJ94UGS1WdO4l/dIH3NdZpdPVDcrJmQoeBkl8LTeZTJC2Xmku
        KDlfet9un/mH/v1T8SCtIVlini3utrU6/e0UrNBkesHdArVg0rtAU2Cx98EHPRyTa1WPGCFOl5X5WItl
        B+8vvrmnWN8zSmyIiJIsR2Gk6ybTUaz/PCiL2m9TFhs7HIw0VxoMzQxTkgDslFJSLt2fmzsUzxhAbPU6
        FCcl566PjD6Gjmt2qUazSxFgJ6Fz+XJAAWrnz78a24lj4PvzlBRBqJzZsMFHgMPvvCMxSoYZOr0jHLq6
        8+BlLChREqDIbL4H2HKi+rvahBBrIAoxz2L599KYmLnLjMYJbzkcfdakpb2GDzet6xEpLVCKX77z48qV
        LcZ8Rp+GEyfElbNnBavOQIezqUl8/+67ospud0FHQQXXKtVqKcCzILskwGN9+vSCD1RXajTiM+AYlvCR
        Wo40zs3RqqZPu0U4ic9VXSMk81YlJorzX34pmhoaxOXTp1uM/S3lAeV+/dGjUsSSoI0srDRFc8zmA+B7
        HChOEgDU6em0tPRCo3FjkVZ7ah0acZhZ6qj89a/lvaIkB1vbPVKs6xElCcywyAW5uL+yOZBvBKqFlOs1
        Y8bAHz376qfS0paD50cIbSUKsetnpxPfPy/vwWHx8bOL1OpzgfpZCrAEDrYmPFJyMuL5bFWVlHkv1tQI
        QuB6DkKLB99nKGZE23PvvR4RCGX7BbRlr4HXAaAIRQBaoWNqSkqvlKSk2OzU1Pyno6LWB7MAhSiBAEVd
        IsSa7lFSb7sD5cPp8nLReP580AIuEISaCcFTp6QsfrK4WHw9caLYhqzu7sSrdbqz4HUiKI2R0D2RtQm7
        esR079JlmLVbt5kfqFRH/EGI10oBn41w4vUQZOktPcXyTr0kOH2RnS1qEOO/QzZmWD1VUiLqtm4V5+Aj
        9WhU6COBBDi/d69oOHlS/LRjh9gOv9oWF+cBYa6LwVid7MAORkafJBsbG3tLRHh4v/u6dq0ONhoh8ySG
        OVpj6a09xYL2PaTYvToswlVBeiehrfCXY3Pm+EUYAwH7h/3AfSD4zrJa94Hxp0E2kG85jYttU222iDtV
        qpEUIJAFeJ3Ml8EHKAijUXG3COnaRpxTCOUZHyhCCIZUn6kEIFRbWCi2p6b6REHpWypV88jeveeDx4dA
        OpBvQyNHpZsHGo39CtXqXcEEkGp0OVIxJ1AICrAFJP3KJYC/EUtdZaWPAIxeZ9DMSDWPnFDxfedsq/XQ
        1Li4z19MTFwF/saDMuSg43+yjZvtCrKyeizTaMqDTdaYxJgLyKACG/pGSdjV5BaMzmza5AEjKfQik/+w
        bJnrPcDla0y0F4GfV0CjQfeBMkHRIA66AlfMdJDlev0b7qWyezS4qt2rWqa26cwMqQyttIY/rbu/Xz18
        uGiWw60y2GIEOjBunMtyGMlXgQ/WPL8B0Wk1II4ZWdYEHzXigQ6LjcbHggvgmWCUvhUjxoZytfpyMAhR
        mH2PPCIOofb/ZvJk55dlZScOTpjQ/GFy8kE0Sj/yPqrd/76UmPgqeEmQGed+QtugmlfCEmGEdtGM0rVM
        0ZyvBTwFULQ+LjW1/ElkS2xyVH9osexbodfXFqMExj5As7/csjg+/hiS03tj8vJm3JGf/9Ld2dkTPrBY
        yv/mcCwclpn5DHiJp9Zb1T7Kztx5aN++9tft9jcxDahrCdeSgIgUkxMTy/D+SNC9oN8X5OSMGZCX9wwU
        shADAE6eJZxjE6Rhhs22H1jf+6rDQawTKtwjSAYxUXEK10eGTusnEHiRJUbY6IyMdJSwh4JZAN1Z40yr
        9eDzSUlr8M4fQVBmfgxID+IgilrMwDOz2NOiJDi73GD4Aczvuis7mzhn2Z4O6gnqBuL4kOUNMc8hVutn
        QLIVKETX+/r1c0yNj5+OMfoBltmKFjlKR3o/91xKyno897qs+Vz8Mk6zESJu2ZrS8cImJiVl/TUh4bm7
        +/WbhPn/B7Dsj6MyMpiY0mGRkrfj4qwKw/gl3iVqFXz8tI9KsWf5dW5uAarBKWhm6sj8e1brATj7Uex5
        bcdCw0Ds4CJlhj3iNLVIZYCMA3NyMjEyP/lkevpj+M/waP7IbCZczPIzN8a0uxBulqApyVz8LIvln+6Q
        WmIy7ZUZoeapcb8xWhbiVtQ0j6Oufxj/iXuWBRwVUrgwUKcb1nqASQTNSS12Ht6nT9w8s3nOx0ZjNfbG
        SmGZ52RmyEhQ7VE4zDhTHujbNw7nBhCxzsTELVfuwFz7LgxwZ8X+VhRe6ohoE/Yu6iBZg8QuP+SjSTII
        4sYbF2ddztqEkzJlitGi+WWGqW1aVYrv14VzbGcmLDIaM9dotZOA6Z8QpxtKtNqVg7OzyZzfkYo8iqEl
        KAQFVsu//H9NW6KyEhRtX/9uC2AQ+Z7NliHvDLqiyzuxsdNkjVJDgfBMSyhMXLvZr0vVAV5CGLsdG9J3
        eY8HkWC4G8KD+Lw+84aS0UDfoslHp6dbENKOu0pYZFMkr49w724ZGr9oAWj6cGzdDFkYE7MTdAS1zBZc
        czXOv2QL/A9M12fkBwoI5QAAAABJRU5ErkJggg==
</value>
  </data>
</root>